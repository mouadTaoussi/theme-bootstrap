@use "sass:math";

/// Remove the unit of a length
/// @param {Number} $number - Number to remove unit from
/// @return {Number} - Unitless number
@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return math.div($number, ($number * 0 + 1));
  }

  @return $number;
}

/// Generates variant-{color} and set background and contrast text color.
/// This Color and background helper combines the power of our .text-* utilities and .bg-* utilities in one class.
/// Using the Sass color-contrast() function, a contrasting color is automatically determined for a particular background-color.
/// @param {Map} map - Map to iterate (default: $theme-colors)
@mixin variant-text-bg($map: $theme-colors) {
  @each $name, $color in $map {
    &.variant-#{$name} {
      color: color-contrast($color);
      background-color: $color;
    }
  }
}

/// Generates variant-{color} and set background color.
/// This helper creates one background-color utility class for each color theme.
/// @param {Map} map - Map to iterate (default: $theme-colors)
@mixin variant-bg($map: $theme-colors) {
  @each $name, $color in $map {
    &.variant-#{$name} {
      background-color: $color;
    }
  }
}

/// Generates is-{color} and set text color.
/// This helper creates one text color utility class for each color theme.
/// @param {Map} map - Map to iterate (default: $theme-colors)
@mixin variant-text($map: $theme-colors) {
  @each $name, $color in $map {
    &.variant-#{$name} {
      color: $color;
    }
  }
}
