/* @docs */
$slider-tick-width: 0.25rem !default;
$slider-tick-height: 0.25rem !default;
$slider-tick-radius: 50% !default;
$slider-tick-background-color: $grey-dark !default;
/* @docs */

/* @bootstrap docs */
// $form-range-track-width:          100%;
// $form-range-track-height:         .5rem;
// $form-range-track-cursor:         pointer;
// $form-range-track-bg:             var(--#{$prefix}tertiary-bg);
// $form-range-track-border-radius:  1rem;
// $form-range-track-box-shadow:     $box-shadow-inset;

// $form-range-thumb-width:                   1rem;
// $form-range-thumb-height:                  $form-range-thumb-width;
// $form-range-thumb-bg:                      $component-active-bg;
// $form-range-thumb-border:                  0;
// $form-range-thumb-border-radius:           1rem;
// $form-range-thumb-box-shadow:              0 .1rem .25rem rgba($black, .1);
// $form-range-thumb-focus-box-shadow:        0 0 0 1px $body-bg, $input-focus-box-shadow;
// $form-range-thumb-focus-box-shadow-width:  $input-focus-width; // For focus box shadow issue in Edge
// $form-range-thumb-active-bg:               tint-color($component-active-bg, 70%);
// $form-range-thumb-disabled-bg:             var(--#{$prefix}secondary-color);
// $form-range-thumb-transition:              background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;
/* @bootstrap docs */

.slider {
  position: relative;
  width: $form-range-track-width;
  height: $form-range-track-height;
  border-radius: $form-range-track-border-radius;
  background-color: $form-range-track-bg;
  cursor: $form-range-track-cursor;
  box-shadow: $form-range-track-box-shadow;

  .slider-track {
    display: flex;
    align-items: center;
    box-shadow: $form-range-track-box-shadow;

    .slider-fill {
      position: absolute;
      left: 0%;
      top: 50%;
      transform: translateY(-50%);
      height: 100%;
      border-radius: $form-range-track-border-radius;

      @each $name, $pair in $theme-colors {
        &.is-#{$name} {
          background-color: $pair;
        }
      }
    }

    .slider-thumb-wrapper {
      display: inline-flex;
      flex-direction: column;
      align-items: center;
      position: absolute;
      top: 50%;
      transform: translate(-50%, -50%);
      cursor: grab;

      .slider-thumb {
        height: $form-range-thumb-height;
        width: $form-range-thumb-width;
        background-color: $form-range-thumb-bg;
        border: $form-range-thumb-border;
        border-radius: $form-range-thumb-border-radius;
        transition: $form-range-thumb-transition;

        &:not(.focus-ring) {
          box-shadow: $form-range-thumb-box-shadow;
        }

        &:focus {
          transform: scale(1.2);

          &:not(.focus-ring) {
            box-shadow: $form-range-thumb-focus-box-shadow;
          }
        }

        &:active {
          background-color: $form-range-thumb-active-bg;
        }

        // rounded thumb
        &.is-rounded {
          border-radius: 50%;
        }
      }

      &.is-dragging {
        cursor: grabbing;

        .slider-thumb {
          transform: scale(1.5);
        }
      }

      &.has-indicator {
        padding: 1rem 0.62rem;
        display: flex;
        align-items: center;
        width: auto;
      }

      // Colors
      @each $name, $pair in $theme-colors {
        .is-#{$name} {
          .slider-thumb {
            background-color: $pair;
          }
        }
      }
    }

    // tick
    .slider-tick {
      position: absolute;
      width: $slider-tick-width;
      height: $slider-tick-height;
      transform: translate(-50%, -50%);
      top: 50%;
      background: $slider-tick-background-color;
      border-radius: $slider-tick-radius;

      &.is-tick-hidden {
        background: transparent;
      }

      .slider-tick-label {
        position: relative;
        bottom: calc(-1 * $form-range-thumb-height);
      }
    }
  }

  &.is-disabled {
    cursor: not-allowed;
    opacity: 0.5;
    background-color: $form-range-thumb-disabled-bg;
  }

  // Sizes
  @each $name, $size in $sizes {
    &.is-#{$name} {
      height: $size;

      @if ($name == "small") {
        $size: 0.5rem;
        height: $size * 0.5;
      }

      .slider-track {
        .slider-thumb {
          height: calc($size * 1.35);
          width: calc($size * 1.35);
        }
      }

      .slider-tick {
        height: calc($size * 0.5);
        width: calc($size * 0.5);

        .slider-tick-label {
          bottom: calc(-1 * $size);
        }
      }
    }
  }
}
